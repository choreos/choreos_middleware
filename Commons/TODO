Commons ToDo list

* ChefNodeNameRetriever is actually searching my_chef_name.sh on NPM resources folder

* Concurrent Knife
To avoid failures on "knife node runlist add", the execution of this command is synchronized
However, if we have different virtual machines executing this command, the result will be not safer
There is two possible solutions:
  * Trying to use the REST API, instead knife commands
  * After executing the knife command, check the runlist with "knife node show"
    If the requested recipe is not there, execute the command "runlist add" again

* Once upon a time, the ssh connection to my VM was working, but taking too long to connect.
The connection timeout of ShhUtil it was not enough.
When the user use the option "try again" when connecting, 
maybe would be better increase the timeout at each try.

* Wish feature: fast bootstrap
The chef bootstrap take so long because it is necessary install the ruby and knife stuff
This first step could be skiped, since it is possible to create VMs with this stuff already installed
In our dev environment, we can make a VM snapshot with this things already installed.
So, the bootstrap would have only to deal with server configuration and chef files/configuration on the node 

* By default, do not upload cookbook already uploaded (check by name and version)

**** DONE ****

* When using the Commons classes in NPM there is no javadoc.
We must install Commons on maven repository with its javadoc. 
mvn clean javadoc:jar source:jar install

* private key argument on bootstrap should be the last argument

