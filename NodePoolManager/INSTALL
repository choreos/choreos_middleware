NODE POOL MANAGER – INSTALLATION GUIDE 
26/04/12
Written by Leonardo Leite (USP)

== WHAT IS IT? ==

Node Pool Manager enables you to create virtual machines as nodes in a cloud infra-structure and retrieve nodes with specific configuration requirements by using a REST API.

At the moment, only Amazon Web Services (AWS) is supported as cloud infra-structure.


== REQUIREMETNS ==

Before you run Node Pool Manager, you will need:

#1 Java 6 (we are using OpenJDK)

#2 Maven 3  (http://maven.apache.org/download.html)

#3 An AWS account

Node Pool Manager will use the AWS EC2 service, which controls the management of virtual machines within the Amazon public cloud. You can create an account at http://aws.amazon.com. But attention: it's a paid service.

#4 An Chef account

Node Pool Manager will properly configure the nodes using Chef, an open-source configuration management system. With Chef you can specify a resources set to be deployed into cloud nodes. These resources are described by a Ruby-like DSL (Domain Specific Language), and include: systems, files, scripts execution, and others.

You can setup your own Chef server, or create an Hosted Chef server account. Hosted Chef is offered by Opscode (http://www.opscode.com/).


== CONFIGURING IT ==

Before you run Node Pool Manager and after getting the AWS and Chef account you must configure Node Pool Manager by editing the properties file.

Open the folder NodePoolManager/src/main/resources, and create a nodepoolmanager.properties file by copying the nodepoolmanager.properties.template file. The new properties file must be created in the same folder.

Open the just created properties file and edit it as follows:

NODE_POOL_MANAGER_PORT: the TCP port that will serve the Node Pool Manager
FIXED_VM_IP: the IP of a virtual machine to test purposes; not necessary
FIXED_VM_PRIVATE_SSH_KEY: the location of the file with the private key to access the above virtual machine by SSH
AMAZON_ACCESS_KEY_ID: credentials of your AWS account
AMAZON_SECRET_KEY: credentials of your AWS account
AMAZON_KEY_PAIR: the name of the key pair generated on the AWS web console to access the nodes by SSH
AMAZON_PRIVATE_SSH_KEY: the location of the file with the private key corresponding to the above key pair
CHEF_CONFIG_FILE: your Chef configuration file location; usually the .chef/knife.rb within your chef repo.
CHEF_REPO: your Chef repo folder, where you store Chef recipes.

Example:
NODE_POOL_MANAGER_PORT=9100
FIXED_VM_IP=192.168.56.101
FIXED_VM_PRIVATE_SSH_KEY=/home/leonardo/.ssh/id_rsa
AMAZON_ACCESS_KEY_ID=AZIKIRMVV65CQU3GJH6Q
AMAZON_SECRET_KEY=NUkSHQWUVOeuawz9j8MijB3St7CVUPGYfZKDyzyR
AMAZON_KEY_PAIR=leofl
AMAZON_PRIVATE_SSH_KEY=/home/leonardo/.ssh/leofl.pem
CHEF_CONFIG_FILE=/home/leonardo/chef/chef-repo/.chef/knife.rb
CHEF_REPO=/home/leonardo/chef/chef-repo

Make sure your knife.rb file be something like:

log_level                :info 
log_location             STDOUT 
node_name                "lleite" 
client_key               "#{current_dir}/lleite.pem" 
validation_client_name   "choreos-verao-validator" 
validation_key           "#{current_dir}/choreos-verao-validator.pem" 
chef_server_url          "https://api.opscode.com/organizations/choreos-verao" 
cache_type               'BasicFile' 
cache_options( :path => "#{ENV['HOME']}/.chef/checksums" ) 
cookbook_path            ["#{current_dir}/../cookbooks"] 

Here, “lleite” is also my Opscode user name, and “choreos-verao” is the organization name configured on Hosted Chef. And don't forget the “cookbook_path” property.

You will also need to download the “getting-started” recipe into your cookbook folder. You can achieve this by typing the command “knife cookbook site install getting-started”. This recipe just create a txt file in the home folder, which is used by Node Pool Manager to verify successful installation.


== COMPILING IT ==

After installing Maven 3, open the terminal at the NodePoolManager folder, and enter the following commands:

$ chmod +x install_jclouds-chef.sh 
$ ./install_jclouds-chef.sh 
$ mvn eclipse:eclipse

It can take several minutes.

== RUNNING IT ==

After compiling the project, you have just to run the main method on the eu.choreos.nodepoolmanager.rest.NodePoolManagerStandaloneServer class.

You must run the system using Java 6.

This task can be easier accomplished if you import the NodePoolManager project in the Eclipse IDE. 

After importing the project, open the menu Window>>Preferences>>Java>>Build Path>>Classpath variables, and set the M2_REPO variable pointing to your Maven repository folder, usually the .m2/repository folder within your home folder.

Obs: we have used the OpenJDK JVM and the Eclipse Indigo version.

If you successfully start the Node Pool Manager, you must see the “Starting Node Pool Manager ...” message on the console.


== VERIFYING IF IT WORKS ==

First go to your cookbook folder within your chef repo. Copy the “getting-started” folder and past it, creating a second folder called “getting-started2”. Open the file recipes/default.rb and change the line “template "#{ENV['HOME']}/chef-getting-started.txt" do” by “template "#{ENV['HOME']}/chef-getting-started2.txt" do”.

Upload this new cookbook to your chef server.

Start Node Pool Manager as earlier described.

Open your AWS web console. Check your current working machines.

Open Firefox and install the Poster plugin, which enables you to send HTTP requisitions. 

With Poster, send the following requisition:

HTTP method: POST
URI: http://localhost:9100/nodepoolmanager/nodes/configs
Content-Type: application/xml
Body: <config><name>getting-started2</name></config>

Change the port number if necessary.

After receive the reply, check which was the new VM created on AWS console. This step can take several minutes.

You must login with SSH in this newly created VM, and verify if the home folder contains the getting-started2.txt file. If so, it worked!



